#set prefix to <C-a>
set -g prefix C-a
unbind C-b

bind \ split-window -h
bind - split-window -v

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind Left resize-pane -L 5
bind Down resize-pane -D 5
bind Up resize-pane -U 5
bind Right resize-pane -R 5

# activity alerts
setw -g monitor-activity on
set -g visual-activity on

setw -g mode-mouse on
set-option -g allow-rename off
set-option -g status-utf8 on
set-option -g default-shell /bin/zsh
set -g default-terminal "screen-256color"
set -g base-index 1
set -g pane-base-index 1
set -g mode-mouse on
set-option -g mouse-select-pane on
set-option -g mouse-select-window on
set-option -g history-limit 10000
#set-option -g status on
set -g status-justify centre

#reload source file
bind r source-file ${HOME}/.tmux.conf \; display-message "tmux source reloaded"


# -----
# vi keybinding
# -----
# Enable when working on OSX
# set-option -g default-command "reattach-to-user-namespace -l zsh"
# set-window-option -g mode-keys vi
# bind-key -t vi-copy 'v' begin-selection
# bind-key -t vi-copy 'y' copy-pipe "reattach-to-user-namespace pbcopy" #copy-selection
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
# bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"


# -----
# vim-tmux-navigator plugin
# -----
# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# -----
# Theme
# -----
 setw -g window-status-format " #F#I:#W#F "
 setw -g window-status-current-format " #F#I:#W#F "
 setw -g window-status-current-bg red
 setw -g window-status-current-fg magenta
 setw -g window-status-current-attr bright
 setw -g window-status-bg white
 setw -g window-status-fg black
 setw -g window-status-attr bright
 setw -g window-status-alert-fg black
 setw -g window-status-alert-bg cyan
 setw -g window-status-alert-attr bright

 set -g message-fg black
 set -g message-bg white
 set -g message-attr bright

 set -g pane-active-border-bg default
 set -g pane-active-border-fg red
 set -g pane-border-bg default
 set -g pane-border-fg default

# ----------
#  Status Bar
# ----------
 set -g status-bg default
 set -g status-fg default
 set -g status-attr bright
 set -g status-interval 5
 set -g status-justify centre
 set -g status-left-length 90
 set -g status-right-length 100
 set -g status-right ""
 set -g status-left ""
 set -g status-right '#[fg=yellow]#[bg=red][#(uptime | cut -f 1 -d "," | cut -f 4 -d " ")]#[default] #[fg=yellow]#[bg=red]#(amixer get Master | grep "Front Left:" | cut -f 7 -d " ")#[default] #[fg=yellow]#[bg=red][#(acpi -t | cut -f 4 -d " " | tr -d ".0")C]#[default] #[fg=white]#[bg=magenta]%H:%M#[default]'

