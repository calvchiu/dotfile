#set prefix to <C-a>
set -g prefix C-a
unbind C-b
bind-key C-a send-prefix

bind '\' split-window -h -c '#{pane_current_path}'
bind '-' split-window -v -c '#{pane_current_path}'

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind Left resize-pane -L 5
bind Down resize-pane -D 5
bind Up resize-pane -U 5
bind Right resize-pane -R 5

# activity alerts
setw -g monitor-activity on
set -g visual-activity on

set-option -g allow-rename off
set -g default-shell $SHELL
set -g default-terminal "screen-256color"
set -g base-index 1
set -g pane-base-index 1
set -g renumber-windows on
set-window-option -g automatic-rename on
set-option -g set-titles on
set -g mouse on
set-option -g history-limit 10000

#reload source file
bind r source-file ${HOME}/.tmux.conf \; display-message "tmux source reloaded"


# enable vi bindings
set-window-option -g mode-keys vi

# -----
# vi keybinding
# -----
# OSX(tmux 2.6) + Linux(tmux 2.1)
if-shell "uname | grep -q Darwin" \
         "set -g default-command \"reattach-to-user-namespace -l ${SHELL}\"; \
          bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'; \
          bind-key -T copy-mode-vi V send-keys -X rectangle-toggle; \
          bind-key -T copy-mode-vi v send-keys -X begin-selection; \
          bind-key -T copy-mode-vi r send-keys -X rectangle-toggle" \
         "bind -t vi-copy y copy-pipe 'xclip -sel clip -i'; \
          bind-key -t vi-copy v begin-selection; \
          bind-key -t vi-copy r rectangle-toggle"


# -----
# vim-tmux-navigator plugin
# -----
# Smart pane switching with awareness of vim splits
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\\ select-pane -l

# loud or quiet?
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none

set -g default-terminal "screen-256color"

# modes
setw -g clock-mode-colour colour135
setw -g mode-style fg=colour196,bg=colour238,bold

# pane
set -g pane-border-style bg=colour235,fg=colour238
set -g pane-active-border-style bg=colour236,fg=colour51

# status bar
set -g status-interval 1
set -g status-justify centre
set -g status-position bottom
set -g status-style bg=colour234,fg=colour137
set -g status-left ''
set -g status-right '#[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour233,bg=colour245,bold] %H:%M:%S '
set -g status-right-length 50
set -g status-left-length 20

# window status
setw -g window-status-current-style fg=colour81,bg=colour238,bold
setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '
setw -g window-status-style fg=colour138,bg=colour235,none
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '
setw -g window-status-bell-style fg=colour255,bg=colour1,bold

# messages
set -g message-style fg=colour232,bg=colour166,bold
set -g message-command-style fg=blue,bg=black

